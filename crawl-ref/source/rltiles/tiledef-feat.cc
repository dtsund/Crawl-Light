// This file has been automatically generated.

#include "tiledef-feat.h"

#include <string>
#include <cstring>
#include <cassert>
using namespace std;

unsigned int _tile_feat_count[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    16,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    11,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    5,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
};

unsigned int tile_feat_count(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_count[idx - TILE_WALL_MAX];
}

tileidx_t _tile_feat_basetiles[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    0,
    0,
    2,
    2,
    4,
    4,
    6,
    6,
    8,
    8,
    10,
    10,
    10,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    22,
    24,
    25,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    42,
    43,
    44,
    44,
    44,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    65,
    66,
    67,
    68,
    69,
    70,
    71,
    72,
    73,
    74,
    75,
    76,
    77,
    78,
    79,
    80,
    81,
    82,
    83,
    84,
    85,
    86,
    87,
    88,
    89,
    90,
    90,
    90,
    90,
    94,
    94,
    96,
    96,
    98,
    98,
    100,
    100,
    102,
    102,
    104,
    104,
    106,
    106,
    108,
    109,
    110,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    120,
    121,
    121,
    121,
    121,
    121,
    121,
    121,
    121,
    121,
    130,
    130,
    130,
    130,
    134,
    134,
    134,
    137,
    138,
    139,
    140,
    141,
    142,
    143,
    144,
    145,
    146,
    147,
    148,
    149,
    150,
    151,
    152,
    153,
    154,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    162,
    162,
    164,
    165,
    166,
    167,
    168,
    169,
    170,
    171,
    172,
    173,
    174,
    175,
    176,
    176,
    178,
    179,
    180,
    180,
    182,
    183,
    184,
    185,
    186,
    187,
    188,
    188,
    188,
    188,
    188,
    188,
    188,
    188,
    188,
    197,
    198,
    199,
    200,
    201,
    202,
    203,
    204,
    205,
    206,
    207,
    208,
    209,
    210,
    211,
    212,
    212,
    212,
    212,
    212,
    212,
    212,
    212,
    220,
    221,
    222,
    222,
    222,
    222,
    222,
    222,
    222,
    222,
    230,
    231,
    232,
    233,
    234,
    235,
    236,
    236,
    236,
    236,
    236,
    236,
    236,
    236,
    236,
    236,
    236,
    247,
    248,
    248,
    248,
    248,
    248,
    248,
    248,
    248,
    256,
    257,
    257,
    259,
    259,
    261,
    261,
    263,
    264,
    265,
    265,
    265,
    265,
    265,
    270,
    270,
    270,
    270,
    270,
    270,
    270,
    270,
    278,
    278,
    278,
    278,
    278,
    278,
    278,
    278,
    286,
    286,
    286,
    286,
    286,
    286,
    286,
    286,
    294,
    294,
    294,
    294,
    294,
    294,
    294,
    294,
    302,
    303,
    304,
    305,
    306,
    307,
    308,
    309,
    310,
    310,
    310,
    310,
    314,
    314,
    314,
    314,
    318,
    319,
    320,
    321,
    322,
    323,
    324,
    325,
    326,
};

tileidx_t tile_feat_basetile(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_basetiles[idx - TILE_WALL_MAX];
}

int _tile_feat_probs[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    10,
    18,
    23,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    10,
    5,
    5,
    5,
    8,
    10,
    15,
    18,
    26,
    34,
    42,
    50,
    58,
    63,
    68,
    73,
    76,
    79,
    80,
    1,
    1,
    1,
    2,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    3,
    4,
    2,
    3,
    3,
    4,
    1,
    2,
    2,
    3,
    3,
    4,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    6,
    10,
    11,
    12,
    16,
    18,
    22,
    24,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
};

int tile_feat_probs(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_probs[idx - TILE_WALL_MAX];
}

const char *_tile_feat_name[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    "DNGN_TREE",
    "DNGN_TREE_1",
    "DNGN_TREE_YELLOW",
    "DNGN_TREE_YELLOW_1",
    "DNGN_TREE_LIGHTRED",
    "DNGN_TREE_LIGHTRED_1",
    "DNGN_TREE_RED",
    "DNGN_TREE_RED_1",
    "DNGN_TREE_DEAD",
    "DNGN_TREE_DEAD_1",
    "DNGN_SWAMP_TREE",
    "DNGN_SWAMP_TREE_1",
    "DNGN_SWAMP_TREE_2",
    "DNGN_DETECTED_SECRET_DOOR",
    "DNGN_CLOSED_DOOR",
    "DNGN_GATE_CLOSED_LEFT",
    "DNGN_GATE_CLOSED_MIDDLE",
    "DNGN_GATE_CLOSED_RIGHT",
    "DNGN_OPEN_DOOR",
    "DNGN_GATE_OPEN_LEFT",
    "DNGN_GATE_OPEN_MIDDLE",
    "DNGN_GATE_OPEN_RIGHT",
    "DNGN_FLESHY_ORIFICE",
    "DNGN_FLESHY_ORIFICE_1",
    "DNGN_STONE_ARCH",
    "DNGN_ORCISH_IDOL",
    "DNGN_GRANITE_STATUE",
    "DNGN_GRANITE_STATUE_1",
    "DNGN_GRANITE_STATUE_2",
    "DNGN_STATUE_CENTAUR",
    "DNGN_STATUE_CENTAUR_1",
    "DNGN_STATUE_MERMAID",
    "DNGN_STATUE_NAGA",
    "DNGN_STATUE_DRAGON",
    "DNGN_STATUE_DRAGON_1",
    "DNGN_STATUE_DRAGON_2",
    "DNGN_STATUE_DRAGON_3",
    "DNGN_STATUE_TROLL",
    "DNGN_STATUE_CAT",
    "DNGN_STATUE_SKULL",
    "DNGN_STATUE_ELEPHANT",
    "DNGN_STATUE_ANCIENT_HERO",
    "DNGN_CRUMBLED_COLUMN",
    "DNGN_GRANITE_STUMP",
    "DNGN_GRAVESTONE",
    "DNGN_GRAVESTONE_1",
    "DNGN_GRAVESTONE_2",
    "DNGN_GRAVESTONE_ORNATE",
    "DNGN_MACHINE_TUKIMA",
    "DNGN_THE_TELEPORTER_VAULTS",
    "DNGN_THE_TELEPORTER_ICE_CAVE",
    "PLACEHOLDER1",
    "PLACEHOLDER2",
    "PLACEHOLDER3",
    "PLACEHOLDER4",
    "PLACEHOLDER5",
    "PLACEHOLDER6",
    "PLACEHOLDER7",
    "PLACEHOLDER8",
    "DNGN_TRAP_DART",
    "DNGN_TRAP_ARROW",
    "DNGN_TRAP_NEEDLE",
    "DNGN_TRAP_BOLT",
    "DNGN_TRAP_SPEAR",
    "DNGN_TRAP_AXE",
    "DNGN_TRAP_BLADE",
    "DNGN_TRAP_NET",
    "DNGN_TRAP_ALARM",
    "DNGN_TRAP_SHAFT",
    "DNGN_TRAP_TELEPORT",
    "DNGN_TRAP_ZOT",
    "DNGN_TRAP_GOLUBRIA",
    "DNGN_TRAP_PLATE",
    "DNGN_EXIT_DUNGEON",
    "DNGN_STONE_STAIRS_DOWN",
    "DNGN_STONE_STAIRS_UP",
    "DNGN_ESCAPE_HATCH_DOWN",
    "DNGN_ESCAPE_HATCH_UP",
    "DNGN_ENTER",
    "DNGN_RETURN",
    "SHOP_GENERAL",
    "SHOP_WEAPONS",
    "SHOP_ARMOUR",
    "SHOP_FOOD",
    "SHOP_BOOKS",
    "SHOP_SCROLLS",
    "SHOP_WANDS",
    "SHOP_JEWELLERY",
    "SHOP_POTIONS",
    "DNGN_ABANDONED_SHOP",
    "DNGN_LAVA",
    "DNGN_LAVA_1",
    "DNGN_LAVA_2",
    "DNGN_LAVA_3",
    "DNGN_OPEN_SEA",
    "DNGN_OPEN_SEA_1",
    "DNGN_DEEP_WATER",
    "DNGN_DEEP_WATER_1",
    "DNGN_SHALLOW_WATER",
    "DNGN_SHALLOW_WATER_1",
    "DNGN_SHALLOW_WATER_DISTURBANCE",
    "DNGN_SHALLOW_WATER_DISTURBANCE_1",
    "DNGN_DEEP_WATER_MURKY",
    "DNGN_DEEP_WATER_MURKY_1",
    "DNGN_SHALLOW_WATER_MURKY",
    "DNGN_SHALLOW_WATER_MURKY_1",
    "DNGN_SHALLOW_WATER_MURKY_DISTURBANCE",
    "DNGN_SHALLOW_WATER_MURKY_DISTURBANCE_1",
    "SHORE_N",
    "SHORE_W",
    "SHORE_E",
    "SHORE_NW",
    "SHORE_NE",
    "DNGN_WAVE_N",
    "DNGN_WAVE_NE",
    "DNGN_WAVE_E",
    "DNGN_WAVE_SE",
    "DNGN_WAVE_S",
    "DNGN_WAVE_SW",
    "DNGN_WAVE_W",
    "DNGN_WAVE_NW",
    "SHOALS_DEEP_WATER",
    "SHOALS_DEEP_WATER_1",
    "SHOALS_DEEP_WATER_2",
    "SHOALS_DEEP_WATER_3",
    "SHOALS_DEEP_WATER_4",
    "SHOALS_DEEP_WATER_5",
    "SHOALS_DEEP_WATER_6",
    "SHOALS_DEEP_WATER_7",
    "SHOALS_DEEP_WATER_8",
    "SHOALS_SHALLOW_WATER",
    "SHOALS_SHALLOW_WATER_1",
    "SHOALS_SHALLOW_WATER_2",
    "SHOALS_SHALLOW_WATER_3",
    "SHOALS_SHALLOW_WATER_DISTURBANCE",
    "SHOALS_SHALLOW_WATER_DISTURBANCE_1",
    "SHOALS_SHALLOW_WATER_DISTURBANCE_2",
    "WAVE_DEEP_CORNER_NE",
    "WAVE_DEEP_CORNER_NW",
    "WAVE_DEEP_CORNER_SE",
    "WAVE_DEEP_CORNER_SW",
    "WAVE_DEEP_N",
    "WAVE_DEEP_S",
    "WAVE_DEEP_E",
    "WAVE_DEEP_W",
    "WAVE_CORNER_NE",
    "WAVE_CORNER_NW",
    "WAVE_CORNER_SE",
    "WAVE_CORNER_SW",
    "WAVE_N",
    "WAVE_S",
    "WAVE_E",
    "WAVE_W",
    "WAVE_INK_CORNER_NE",
    "WAVE_INK_CORNER_NW",
    "WAVE_INK_CORNER_SE",
    "WAVE_INK_CORNER_SW",
    "WAVE_INK_N",
    "WAVE_INK_S",
    "WAVE_INK_E",
    "WAVE_INK_W",
    "WAVE_INK_FULL",
    "LIQUEFACTION",
    "LIQUEFACTION_1",
    "DNGN_UNSEEN_ENTRANCE",
    "DNGN_ENTER_HELL",
    "DNGN_ENTER_ZOT_CLOSED",
    "DNGN_ENTER_ZOT_OPEN",
    "DNGN_RETURN_ZOT",
    "DNGN_ENTER_DIS",
    "DNGN_ENTER_GEHENNA",
    "DNGN_ENTER_COCYTUS",
    "DNGN_ENTER_TARTARUS",
    "DNGN_RETURN_HELL",
    "DNGN_ENTER_ABYSS",
    "DNGN_ENTER_ABYSS_DIRECTED",
    "DNGN_EXIT_ABYSS",
    "DNGN_EXIT_ABYSS_1",
    "DNGN_ENTER_LABYRINTH",
    "DNGN_ENTER_PANDEMONIUM",
    "DNGN_PORTAL",
    "DNGN_PORTAL_1",
    "DNGN_STARRY_PORTAL",
    "DNGN_TRANSIT_PANDEMONIUM",
    "DNGN_PORTAL_VOLCANO",
    "DNGN_PORTAL_SEWER",
    "DNGN_PORTAL_SEWER_RUSTED",
    "DNGN_PORTAL_ICE_CAVE",
    "DNGN_PORTAL_WIZARD_LAB",
    "DNGN_PORTAL_WIZARD_LAB_1",
    "DNGN_PORTAL_WIZARD_LAB_2",
    "DNGN_PORTAL_WIZARD_LAB_3",
    "DNGN_PORTAL_WIZARD_LAB_4",
    "DNGN_PORTAL_WIZARD_LAB_5",
    "DNGN_PORTAL_WIZARD_LAB_6",
    "DNGN_PORTAL_WIZARD_LAB_7",
    "DNGN_PORTAL_WIZARD_LAB_8",
    "PLACEHOLDER9",
    "PLACEHOLDER10",
    "PLACEHOLDER11",
    "PLACEHOLDER12",
    "PLACEHOLDER13",
    "PLACEHOLDER14",
    "PLACEHOLDER15",
    "PLACEHOLDER16",
    "PLACEHOLDER17",
    "PLACEHOLDER18",
    "DNGN_UNSEEN_ALTAR",
    "DNGN_ALTAR_ZIN",
    "DNGN_ALTAR_SHINING_ONE",
    "DNGN_ALTAR_KIKUBAAQUDGHA",
    "DNGN_ALTAR_YREDELEMNUL",
    "DNGN_ALTAR_XOM",
    "DNGN_ALTAR_XOM_1",
    "DNGN_ALTAR_XOM_2",
    "DNGN_ALTAR_XOM_3",
    "DNGN_ALTAR_XOM_4",
    "DNGN_ALTAR_XOM_5",
    "DNGN_ALTAR_XOM_6",
    "DNGN_ALTAR_XOM_7",
    "DNGN_ALTAR_VEHUMET",
    "DNGN_ALTAR_OKAWARU",
    "DNGN_ALTAR_MAKHLEB",
    "DNGN_ALTAR_MAKHLEB_1",
    "DNGN_ALTAR_MAKHLEB_2",
    "DNGN_ALTAR_MAKHLEB_3",
    "DNGN_ALTAR_MAKHLEB_4",
    "DNGN_ALTAR_MAKHLEB_5",
    "DNGN_ALTAR_MAKHLEB_6",
    "DNGN_ALTAR_MAKHLEB_7",
    "DNGN_ALTAR_SIF_MUNA",
    "DNGN_ALTAR_TROG",
    "DNGN_ALTAR_NEMELEX_XOBEH",
    "DNGN_ALTAR_ELYVILON",
    "DNGN_ALTAR_LUGONU",
    "DNGN_ALTAR_BEOGH",
    "DNGN_ALTAR_JIYVA",
    "DNGN_ALTAR_JIYVA_1",
    "DNGN_ALTAR_JIYVA_2",
    "DNGN_ALTAR_JIYVA_3",
    "DNGN_ALTAR_JIYVA_4",
    "DNGN_ALTAR_JIYVA_5",
    "DNGN_ALTAR_JIYVA_6",
    "DNGN_ALTAR_JIYVA_7",
    "DNGN_ALTAR_JIYVA_8",
    "DNGN_ALTAR_JIYVA_9",
    "DNGN_ALTAR_JIYVA_10",
    "DNGN_ALTAR_FEDHAS",
    "DNGN_ALTAR_CHEIBRIADOS",
    "DNGN_ALTAR_CHEIBRIADOS_1",
    "DNGN_ALTAR_CHEIBRIADOS_2",
    "DNGN_ALTAR_CHEIBRIADOS_3",
    "DNGN_ALTAR_CHEIBRIADOS_4",
    "DNGN_ALTAR_CHEIBRIADOS_5",
    "DNGN_ALTAR_CHEIBRIADOS_6",
    "DNGN_ALTAR_CHEIBRIADOS_7",
    "DNGN_ALTAR_ASHENZARI",
    "DNGN_FOUNTAIN",
    "DNGN_FOUNTAIN_1",
    "DNGN_SPARKLING_FOUNTAIN",
    "DNGN_SPARKLING_FOUNTAIN_1",
    "DNGN_BLOOD_FOUNTAIN",
    "DNGN_BLOOD_FOUNTAIN_1",
    "DNGN_DRY_FOUNTAIN",
    "DNGN_DRY_FOUNTAIN_WHITE",
    "BLOOD",
    "BLOOD_1",
    "BLOOD_2",
    "BLOOD_3",
    "BLOOD_4",
    "WALL_BLOOD_S",
    "WALL_BLOOD_S_1",
    "WALL_BLOOD_S_2",
    "WALL_BLOOD_S_3",
    "WALL_BLOOD_S_4",
    "WALL_BLOOD_S_5",
    "WALL_BLOOD_S_6",
    "WALL_BLOOD_S_7",
    "WALL_BLOOD_W",
    "WALL_BLOOD_W_1",
    "WALL_BLOOD_W_2",
    "WALL_BLOOD_W_3",
    "WALL_BLOOD_W_4",
    "WALL_BLOOD_W_5",
    "WALL_BLOOD_W_6",
    "WALL_BLOOD_W_7",
    "WALL_BLOOD_N",
    "WALL_BLOOD_N_1",
    "WALL_BLOOD_N_2",
    "WALL_BLOOD_N_3",
    "WALL_BLOOD_N_4",
    "WALL_BLOOD_N_5",
    "WALL_BLOOD_N_6",
    "WALL_BLOOD_N_7",
    "WALL_BLOOD_E",
    "WALL_BLOOD_E_1",
    "WALL_BLOOD_E_2",
    "WALL_BLOOD_E_3",
    "WALL_BLOOD_E_4",
    "WALL_BLOOD_E_5",
    "WALL_BLOOD_E_6",
    "WALL_BLOOD_E_7",
    "HALO",
    "HALO_RANGE",
    "RAY",
    "RAY_OUT_OF_RANGE",
    "TRAVEL_EXCLUSION_BG",
    "TRAVEL_EXCLUSION_CENTRE_BG",
    "ITEM_SLOT",
    "SANCTUARY",
    "MOLD",
    "MOLD_1",
    "MOLD_2",
    "MOLD_3",
    "GLOWING_MOLD",
    "GLOWING_MOLD_1",
    "GLOWING_MOLD_2",
    "GLOWING_MOLD_3",
    "SILENCED",
    "KRAKEN_OVERLAY_NW",
    "KRAKEN_OVERLAY_NE",
    "KRAKEN_OVERLAY_SE",
    "KRAKEN_OVERLAY_SW",
    "ELDRITCH_OVERLAY_NW",
    "ELDRITCH_OVERLAY_NE",
    "ELDRITCH_OVERLAY_SE",
    "ELDRITCH_OVERLAY_SW",
};

const char *tile_feat_name(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_name[idx - TILE_WALL_MAX];
}

tile_info _tile_feat_info[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    tile_info(32, 32, 3, 0, 0, 0, 29, 32),
    tile_info(32, 32, 3, 0, 29, 0, 58, 32),
    tile_info(32, 32, 3, 0, 58, 0, 87, 32),
    tile_info(32, 32, 3, 0, 87, 0, 116, 32),
    tile_info(32, 32, 3, 0, 116, 0, 145, 32),
    tile_info(32, 32, 3, 0, 145, 0, 174, 32),
    tile_info(32, 32, 3, 0, 174, 0, 203, 32),
    tile_info(32, 32, 3, 0, 203, 0, 232, 32),
    tile_info(32, 32, 4, 3, 232, 0, 258, 29),
    tile_info(32, 32, 2, 0, 258, 0, 288, 32),
    tile_info(32, 32, 1, 0, 288, 0, 318, 32),
    tile_info(32, 32, 1, 1, 318, 0, 348, 31),
    tile_info(32, 32, 0, 0, 348, 0, 380, 32),
    tile_info(32, 32, 0, 0, 380, 0, 412, 32),
    tile_info(32, 32, 0, 0, 412, 0, 444, 32),
    tile_info(32, 32, 0, 0, 444, 0, 476, 32),
    tile_info(32, 32, 0, 0, 476, 0, 508, 32),
    tile_info(32, 32, 0, 0, 508, 0, 540, 32),
    tile_info(32, 32, 0, 0, 540, 0, 572, 32),
    tile_info(32, 32, 0, 0, 572, 0, 604, 32),
    tile_info(32, 32, 0, 0, 604, 0, 636, 8),
    tile_info(32, 32, 0, 0, 636, 0, 668, 32),
    tile_info(32, 32, 0, 0, 668, 0, 700, 32),
    tile_info(32, 32, 0, 0, 700, 0, 732, 32),
    tile_info(32, 32, 0, 0, 732, 0, 764, 32),
    tile_info(32, 32, 3, 2, 764, 0, 792, 30),
    tile_info(32, 32, 4, 0, 792, 0, 820, 32),
    tile_info(32, 32, 5, 0, 820, 0, 847, 32),
    tile_info(32, 32, 2, 2, 847, 0, 877, 30),
    tile_info(32, 32, 3, 0, 877, 0, 905, 32),
    tile_info(32, 32, 4, 0, 905, 0, 931, 32),
    tile_info(32, 32, 0, 0, 931, 0, 962, 32),
    tile_info(32, 32, 4, 1, 962, 0, 989, 31),
    tile_info(32, 32, 0, 0, 989, 0, 1021, 32),
    tile_info(32, 32, 4, 1, 0, 32, 27, 63),
    tile_info(32, 32, 4, 2, 27, 32, 54, 62),
    tile_info(32, 32, 4, 6, 54, 32, 81, 58),
    tile_info(32, 32, 0, 0, 81, 32, 112, 64),
    tile_info(32, 32, 4, 9, 112, 32, 139, 55),
    tile_info(32, 32, 4, 3, 139, 32, 166, 61),
    tile_info(32, 32, 0, 0, 166, 32, 198, 64),
    tile_info(32, 32, 4, 2, 198, 32, 225, 62),
    tile_info(32, 32, 4, 5, 225, 32, 252, 59),
    tile_info(32, 32, 4, 14, 252, 32, 279, 50),
    tile_info(32, 32, 0, 3, 279, 32, 311, 61),
    tile_info(32, 32, 0, 3, 311, 32, 343, 61),
    tile_info(32, 32, 0, 3, 343, 32, 375, 61),
    tile_info(32, 32, 0, 1, 375, 32, 407, 63),
    tile_info(32, 32, 0, 0, 407, 32, 439, 64),
    tile_info(32, 32, 0, 0, 439, 32, 471, 64),
    tile_info(32, 32, 0, 0, 471, 32, 503, 64),
    tile_info(32, 32, 6, 6, 503, 32, 524, 55),
    tile_info(32, 32, 6, 6, 524, 32, 545, 55),
    tile_info(32, 32, 6, 6, 545, 32, 566, 55),
    tile_info(32, 32, 6, 6, 566, 32, 587, 55),
    tile_info(32, 32, 6, 6, 587, 32, 608, 55),
    tile_info(32, 32, 6, 6, 608, 32, 629, 55),
    tile_info(32, 32, 6, 6, 629, 32, 650, 55),
    tile_info(32, 32, 6, 6, 650, 32, 671, 55),
    tile_info(32, 32, 1, 9, 671, 32, 701, 53),
    tile_info(32, 32, 1, 8, 701, 32, 731, 54),
    tile_info(32, 32, 1, 9, 731, 32, 761, 53),
    tile_info(32, 32, 1, 9, 761, 32, 791, 53),
    tile_info(32, 32, 1, 7, 791, 32, 821, 55),
    tile_info(32, 32, 1, 7, 821, 32, 851, 55),
    tile_info(32, 32, 1, 6, 851, 32, 881, 56),
    tile_info(32, 32, 1, 9, 881, 32, 911, 53),
    tile_info(32, 32, 1, 9, 911, 32, 941, 53),
    tile_info(32, 32, 4, 5, 941, 32, 967, 55),
    tile_info(32, 32, 0, 7, 967, 32, 999, 50),
    tile_info(32, 32, 0, 7, 0, 64, 32, 84),
    tile_info(32, 32, 7, 2, 32, 64, 50, 92),
    tile_info(32, 32, 1, 6, 50, 64, 80, 85),
    tile_info(32, 32, 6, 0, 80, 64, 106, 96),
    tile_info(32, 32, 0, 0, 106, 64, 138, 96),
    tile_info(32, 32, 0, 0, 138, 64, 170, 96),
    tile_info(32, 32, 0, 2, 170, 64, 200, 89),
    tile_info(32, 32, 0, 0, 200, 64, 226, 96),
    tile_info(32, 32, 0, 2, 226, 64, 258, 93),
    tile_info(32, 32, 0, 0, 258, 64, 290, 96),
    tile_info(32, 32, 0, 0, 290, 64, 322, 96),
    tile_info(32, 32, 0, 0, 322, 64, 354, 96),
    tile_info(32, 32, 0, 0, 354, 64, 386, 96),
    tile_info(32, 32, 0, 0, 386, 64, 418, 96),
    tile_info(32, 32, 0, 0, 418, 64, 450, 96),
    tile_info(32, 32, 0, 0, 450, 64, 482, 96),
    tile_info(32, 32, 0, 0, 482, 64, 514, 96),
    tile_info(32, 32, 0, 0, 514, 64, 546, 96),
    tile_info(32, 32, 0, 0, 546, 64, 578, 96),
    tile_info(32, 32, 0, 0, 578, 64, 610, 96),
    tile_info(32, 32, 0, 0, 610, 64, 642, 96),
    tile_info(32, 32, 0, 0, 642, 64, 674, 96),
    tile_info(32, 32, 0, 0, 674, 64, 706, 96),
    tile_info(32, 32, 0, 0, 706, 64, 738, 96),
    tile_info(32, 32, 0, 0, 738, 64, 770, 96),
    tile_info(32, 32, 0, 0, 770, 64, 802, 96),
    tile_info(32, 32, 0, 0, 802, 64, 834, 96),
    tile_info(32, 32, 0, 0, 834, 64, 866, 96),
    tile_info(32, 32, 0, 0, 866, 64, 898, 96),
    tile_info(32, 32, 0, 0, 898, 64, 930, 96),
    tile_info(32, 32, 0, 0, 930, 64, 962, 96),
    tile_info(32, 32, 0, 0, 962, 64, 994, 96),
    tile_info(32, 32, 0, 0, 0, 96, 32, 128),
    tile_info(32, 32, 0, 0, 32, 96, 64, 128),
    tile_info(32, 32, 0, 0, 64, 96, 96, 128),
    tile_info(32, 32, 0, 0, 96, 96, 128, 128),
    tile_info(32, 32, 0, 0, 128, 96, 160, 128),
    tile_info(32, 32, 0, 0, 160, 96, 192, 128),
    tile_info(32, 32, 0, 0, 192, 96, 223, 100),
    tile_info(32, 32, 0, 1, 223, 96, 227, 127),
    tile_info(32, 32, 28, 1, 227, 96, 231, 127),
    tile_info(32, 32, 0, 0, 231, 96, 237, 102),
    tile_info(32, 32, 26, 0, 231, 102, 237, 107),
    tile_info(32, 32, 0, 0, 231, 107, 263, 117),
    tile_info(32, 32, 23, 0, 231, 117, 240, 126),
    tile_info(32, 32, 19, 0, 263, 96, 276, 128),
    tile_info(32, 32, 18, 26, 276, 96, 290, 102),
    tile_info(32, 32, 0, 25, 276, 102, 308, 109),
    tile_info(32, 32, 0, 25, 276, 109, 287, 116),
    tile_info(32, 32, 0, 0, 308, 96, 320, 128),
    tile_info(32, 32, 0, 0, 320, 96, 336, 106),
    tile_info(32, 32, 0, 0, 336, 96, 368, 128),
    tile_info(32, 32, 0, 0, 368, 96, 400, 128),
    tile_info(32, 32, 0, 0, 400, 96, 432, 128),
    tile_info(32, 32, 0, 0, 432, 96, 464, 128),
    tile_info(32, 32, 0, 0, 464, 96, 496, 128),
    tile_info(32, 32, 0, 0, 496, 96, 528, 128),
    tile_info(32, 32, 0, 0, 528, 96, 560, 128),
    tile_info(32, 32, 0, 0, 560, 96, 592, 128),
    tile_info(32, 32, 0, 0, 592, 96, 624, 128),
    tile_info(32, 32, 0, 0, 624, 96, 656, 128),
    tile_info(32, 32, 0, 0, 656, 96, 688, 128),
    tile_info(32, 32, 0, 0, 688, 96, 720, 128),
    tile_info(32, 32, 0, 0, 720, 96, 752, 128),
    tile_info(32, 32, 0, 0, 752, 96, 784, 128),
    tile_info(32, 32, 0, 0, 784, 96, 816, 128),
    tile_info(32, 32, 0, 0, 816, 96, 848, 128),
    tile_info(32, 32, 0, 0, 848, 96, 880, 128),
    tile_info(32, 32, 0, 0, 880, 96, 912, 128),
    tile_info(32, 32, 0, 0, 912, 96, 944, 128),
    tile_info(32, 32, 0, 0, 944, 96, 976, 128),
    tile_info(32, 32, 0, 0, 976, 96, 1008, 128),
    tile_info(32, 32, 0, 0, 0, 128, 32, 160),
    tile_info(32, 32, 0, 0, 32, 128, 64, 160),
    tile_info(32, 32, 0, 0, 64, 128, 96, 160),
    tile_info(32, 32, 0, 0, 96, 128, 128, 160),
    tile_info(32, 32, 0, 0, 128, 128, 160, 160),
    tile_info(32, 32, 0, 0, 160, 128, 192, 160),
    tile_info(32, 32, 0, 0, 192, 128, 224, 160),
    tile_info(32, 32, 0, 0, 224, 128, 256, 160),
    tile_info(32, 32, 0, 0, 256, 128, 288, 160),
    tile_info(32, 32, 0, 0, 288, 128, 320, 160),
    tile_info(32, 32, 0, 0, 320, 128, 352, 160),
    tile_info(32, 32, 0, 0, 352, 128, 384, 160),
    tile_info(32, 32, 0, 0, 384, 128, 416, 160),
    tile_info(32, 32, 0, 0, 416, 128, 448, 160),
    tile_info(32, 32, 0, 0, 448, 128, 480, 160),
    tile_info(32, 32, 0, 0, 480, 128, 512, 160),
    tile_info(32, 32, 0, 0, 512, 128, 544, 160),
    tile_info(32, 32, 0, 0, 544, 128, 576, 160),
    tile_info(32, 32, 0, 0, 576, 128, 608, 160),
    tile_info(32, 32, 0, 0, 608, 128, 640, 160),
    tile_info(32, 32, 0, 0, 640, 128, 672, 160),
    tile_info(32, 32, 0, 0, 672, 128, 704, 160),
    tile_info(32, 32, 0, 0, 704, 128, 736, 160),
    tile_info(32, 32, 0, 0, 736, 128, 768, 160),
    tile_info(32, 32, 0, 0, 768, 128, 800, 160),
    tile_info(32, 32, 0, 0, 800, 128, 832, 160),
    tile_info(32, 32, 0, 0, 832, 128, 864, 160),
    tile_info(32, 32, 0, 0, 864, 128, 896, 160),
    tile_info(32, 32, 0, 0, 896, 128, 928, 160),
    tile_info(32, 32, 0, 0, 928, 128, 960, 160),
    tile_info(32, 32, 0, 0, 960, 128, 992, 160),
    tile_info(32, 32, 0, 0, 992, 128, 1024, 160),
    tile_info(32, 32, 0, 0, 0, 160, 32, 192),
    tile_info(32, 32, 0, 0, 32, 160, 64, 192),
    tile_info(32, 32, 0, 0, 64, 160, 96, 192),
    tile_info(32, 32, 0, 0, 96, 160, 128, 192),
    tile_info(32, 32, 0, 0, 128, 160, 160, 192),
    tile_info(32, 32, 0, 0, 160, 160, 192, 192),
    tile_info(32, 32, 3, 2, 192, 160, 218, 189),
    tile_info(32, 32, 3, 2, 218, 160, 244, 189),
    tile_info(32, 32, 3, 2, 244, 160, 270, 189),
    tile_info(32, 32, 6, 0, 270, 160, 291, 192),
    tile_info(32, 32, 0, 0, 291, 160, 323, 192),
    tile_info(32, 32, 2, 3, 323, 160, 350, 187),
    tile_info(32, 32, 2, 3, 350, 160, 377, 187),
    tile_info(32, 32, 1, 0, 377, 160, 406, 192),
    tile_info(32, 32, 2, 0, 406, 160, 434, 192),
    tile_info(32, 32, 2, 0, 434, 160, 462, 192),
    tile_info(32, 32, 2, 0, 462, 160, 490, 192),
    tile_info(32, 32, 2, 0, 490, 160, 518, 192),
    tile_info(32, 32, 2, 0, 518, 160, 546, 192),
    tile_info(32, 32, 2, 0, 546, 160, 574, 192),
    tile_info(32, 32, 2, 0, 574, 160, 602, 192),
    tile_info(32, 32, 2, 0, 602, 160, 630, 192),
    tile_info(32, 32, 2, 0, 630, 160, 658, 192),
    tile_info(32, 32, 6, 6, 658, 160, 679, 183),
    tile_info(32, 32, 6, 6, 679, 160, 700, 183),
    tile_info(32, 32, 6, 6, 700, 160, 721, 183),
    tile_info(32, 32, 6, 6, 721, 160, 742, 183),
    tile_info(32, 32, 6, 6, 742, 160, 763, 183),
    tile_info(32, 32, 6, 6, 763, 160, 784, 183),
    tile_info(32, 32, 6, 6, 784, 160, 805, 183),
    tile_info(32, 32, 6, 6, 805, 160, 826, 183),
    tile_info(32, 32, 6, 6, 826, 160, 847, 183),
    tile_info(32, 32, 6, 6, 847, 160, 868, 183),
    tile_info(32, 32, 1, 2, 868, 160, 898, 190),
    tile_info(32, 32, 2, 0, 898, 160, 926, 192),
    tile_info(32, 32, 2, 0, 926, 160, 954, 192),
    tile_info(32, 32, 2, 3, 954, 160, 982, 189),
    tile_info(32, 32, 2, 3, 982, 160, 1010, 189),
    tile_info(32, 32, 2, 2, 0, 192, 28, 222),
    tile_info(32, 32, 2, 2, 28, 192, 56, 222),
    tile_info(32, 32, 2, 2, 56, 192, 84, 222),
    tile_info(32, 32, 2, 2, 84, 192, 112, 222),
    tile_info(32, 32, 2, 2, 112, 192, 140, 222),
    tile_info(32, 32, 2, 2, 140, 192, 168, 222),
    tile_info(32, 32, 2, 2, 168, 192, 196, 222),
    tile_info(32, 32, 2, 2, 196, 192, 224, 222),
    tile_info(32, 32, 0, 0, 224, 192, 255, 224),
    tile_info(32, 32, 2, 0, 255, 192, 283, 224),
    tile_info(32, 32, 2, 0, 283, 192, 311, 224),
    tile_info(32, 32, 2, 0, 311, 192, 339, 224),
    tile_info(32, 32, 2, 0, 339, 192, 367, 224),
    tile_info(32, 32, 2, 0, 367, 192, 395, 224),
    tile_info(32, 32, 2, 0, 395, 192, 423, 224),
    tile_info(32, 32, 2, 0, 423, 192, 451, 224),
    tile_info(32, 32, 2, 0, 451, 192, 479, 224),
    tile_info(32, 32, 2, 0, 479, 192, 507, 224),
    tile_info(32, 32, 2, 3, 507, 192, 535, 221),
    tile_info(32, 32, 2, 7, 535, 192, 563, 217),
    tile_info(32, 32, 1, 0, 563, 192, 593, 224),
    tile_info(32, 32, 2, 4, 593, 192, 621, 220),
    tile_info(32, 32, 2, 0, 621, 192, 649, 224),
    tile_info(32, 32, 1, 1, 649, 192, 679, 223),
    tile_info(32, 32, 2, 11, 679, 192, 707, 213),
    tile_info(32, 32, 2, 11, 707, 192, 735, 213),
    tile_info(32, 32, 2, 11, 735, 192, 763, 213),
    tile_info(32, 32, 2, 12, 763, 192, 791, 212),
    tile_info(32, 32, 2, 10, 791, 192, 819, 214),
    tile_info(32, 32, 2, 11, 819, 192, 847, 213),
    tile_info(32, 32, 2, 11, 847, 192, 875, 213),
    tile_info(32, 32, 2, 10, 875, 192, 903, 214),
    tile_info(32, 32, 2, 10, 903, 192, 931, 214),
    tile_info(32, 32, 2, 12, 931, 192, 959, 212),
    tile_info(32, 32, 2, 12, 959, 192, 987, 212),
    tile_info(32, 32, 0, 4, 987, 192, 1018, 220),
    tile_info(32, 32, 2, 1, 0, 224, 28, 255),
    tile_info(32, 32, 2, 1, 28, 224, 56, 255),
    tile_info(32, 32, 2, 1, 56, 224, 84, 255),
    tile_info(32, 32, 2, 1, 84, 224, 112, 255),
    tile_info(32, 32, 2, 1, 112, 224, 140, 255),
    tile_info(32, 32, 2, 1, 140, 224, 168, 255),
    tile_info(32, 32, 2, 1, 168, 224, 196, 255),
    tile_info(32, 32, 2, 1, 196, 224, 224, 255),
    tile_info(32, 32, 2, 4, 224, 224, 254, 252),
    tile_info(32, 32, 1, 0, 254, 224, 285, 256),
    tile_info(32, 32, 1, 0, 285, 224, 316, 256),
    tile_info(32, 32, 1, 0, 316, 224, 347, 256),
    tile_info(32, 32, 1, 0, 347, 224, 378, 256),
    tile_info(32, 32, 1, 0, 378, 224, 409, 256),
    tile_info(32, 32, 1, 0, 409, 224, 440, 256),
    tile_info(32, 32, 1, 0, 440, 224, 471, 256),
    tile_info(32, 32, 1, 0, 471, 224, 502, 256),
    tile_info(32, 32, 7, 4, 502, 224, 521, 246),
    tile_info(32, 32, 4, 7, 521, 224, 546, 244),
    tile_info(32, 32, 2, 4, 546, 224, 575, 248),
    tile_info(32, 32, 2, 3, 575, 224, 603, 249),
    tile_info(32, 32, 2, 3, 603, 224, 631, 249),
    tile_info(32, 32, 0, 3, 631, 224, 663, 253),
    tile_info(32, 32, 6, 5, 663, 224, 687, 251),
    tile_info(32, 32, 2, 6, 687, 224, 716, 247),
    tile_info(32, 32, 2, 0, 716, 224, 746, 256),
    tile_info(32, 32, 2, 1, 746, 224, 774, 255),
    tile_info(32, 32, 2, 0, 774, 224, 803, 256),
    tile_info(32, 32, 4, 7, 803, 224, 829, 249),
    tile_info(32, 32, 2, 0, 829, 224, 859, 256),
    tile_info(32, 32, 0, 0, 859, 224, 888, 256),
    tile_info(32, 32, 0, 6, 888, 224, 915, 248),
    tile_info(32, 32, 3, 2, 915, 224, 938, 253),
    tile_info(32, 32, 0, 2, 938, 224, 970, 254),
    tile_info(32, 32, 0, 2, 970, 224, 1001, 252),
    tile_info(32, 32, 0, 2, 0, 256, 32, 285),
    tile_info(32, 32, 0, 4, 32, 256, 57, 282),
    tile_info(32, 32, 0, 2, 57, 256, 89, 286),
    tile_info(32, 32, 0, 0, 89, 256, 121, 285),
    tile_info(32, 32, 2, 0, 121, 256, 145, 283),
    tile_info(32, 32, 1, 3, 145, 256, 174, 279),
    tile_info(32, 32, 0, 0, 174, 256, 204, 288),
    tile_info(32, 32, 2, 0, 204, 256, 232, 287),
    tile_info(32, 32, 1, 0, 232, 256, 261, 288),
    tile_info(32, 32, 2, 0, 261, 256, 287, 281),
    tile_info(32, 32, 0, 0, 287, 256, 317, 288),
    tile_info(32, 32, 3, 0, 317, 256, 346, 288),
    tile_info(32, 32, 5, 2, 346, 256, 373, 280),
    tile_info(32, 32, 6, 1, 373, 256, 396, 285),
    tile_info(32, 32, 0, 0, 396, 256, 428, 286),
    tile_info(32, 32, 1, 2, 428, 256, 459, 284),
    tile_info(32, 32, 0, 1, 459, 256, 491, 285),
    tile_info(32, 32, 7, 2, 491, 256, 516, 282),
    tile_info(32, 32, 0, 0, 516, 256, 548, 286),
    tile_info(32, 32, 0, 0, 548, 256, 580, 288),
    tile_info(32, 32, 0, 0, 580, 256, 612, 288),
    tile_info(32, 32, 0, 0, 612, 256, 644, 288),
    tile_info(32, 32, 0, 0, 644, 256, 676, 288),
    tile_info(32, 32, 0, 0, 676, 256, 708, 288),
    tile_info(32, 32, 0, 0, 708, 256, 740, 288),
    tile_info(32, 32, 0, 0, 740, 256, 772, 288),
    tile_info(32, 32, 0, 0, 772, 256, 804, 288),
    tile_info(32, 32, 5, 3, 804, 256, 827, 281),
    tile_info(32, 32, 3, 3, 827, 256, 853, 283),
    tile_info(32, 32, 4, 3, 853, 256, 877, 281),
    tile_info(32, 32, 2, 4, 877, 256, 905, 282),
    tile_info(32, 32, 4, 2, 905, 256, 931, 284),
    tile_info(32, 32, 0, 1, 931, 256, 963, 287),
    tile_info(32, 32, 2, 1, 963, 256, 992, 287),
    tile_info(32, 32, 0, 2, 992, 256, 1024, 286),
    tile_info(32, 32, 0, 0, 0, 288, 32, 320),
    tile_info(32, 32, 0, 0, 32, 288, 64, 320),
    tile_info(32, 32, 0, 0, 64, 288, 96, 320),
    tile_info(32, 32, 0, 0, 96, 288, 128, 320),
    tile_info(32, 32, 0, 0, 128, 288, 160, 320),
    tile_info(32, 32, 0, 0, 160, 288, 192, 320),
    tile_info(32, 32, 0, 0, 192, 288, 224, 320),
    tile_info(32, 32, 0, 0, 224, 288, 256, 320),
    tile_info(32, 32, 0, 0, 256, 288, 288, 320),
};

tile_info &tile_feat_info(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_info[idx - TILE_WALL_MAX];
}


typedef std::pair<const char*, tileidx_t> _name_pair;

_name_pair feat_name_pairs[] =
{
    _name_pair("blood", 265 + TILE_WALL_MAX),
    _name_pair("dngn_abandoned_shop", 89 + TILE_WALL_MAX),
    _name_pair("dngn_altar_ashenzari", 256 + TILE_WALL_MAX),
    _name_pair("dngn_altar_beogh", 235 + TILE_WALL_MAX),
    _name_pair("dngn_altar_cheibriados", 248 + TILE_WALL_MAX),
    _name_pair("dngn_altar_elyvilon", 233 + TILE_WALL_MAX),
    _name_pair("dngn_altar_fedhas", 247 + TILE_WALL_MAX),
    _name_pair("dngn_altar_jiyva", 236 + TILE_WALL_MAX),
    _name_pair("dngn_altar_kikubaaqudgha", 210 + TILE_WALL_MAX),
    _name_pair("dngn_altar_lugonu", 234 + TILE_WALL_MAX),
    _name_pair("dngn_altar_makhleb", 222 + TILE_WALL_MAX),
    _name_pair("dngn_altar_nemelex_xobeh", 232 + TILE_WALL_MAX),
    _name_pair("dngn_altar_okawaru", 221 + TILE_WALL_MAX),
    _name_pair("dngn_altar_shining_one", 209 + TILE_WALL_MAX),
    _name_pair("dngn_altar_sif_muna", 230 + TILE_WALL_MAX),
    _name_pair("dngn_altar_trog", 231 + TILE_WALL_MAX),
    _name_pair("dngn_altar_vehumet", 220 + TILE_WALL_MAX),
    _name_pair("dngn_altar_xom", 212 + TILE_WALL_MAX),
    _name_pair("dngn_altar_yredelemnul", 211 + TILE_WALL_MAX),
    _name_pair("dngn_altar_zin", 208 + TILE_WALL_MAX),
    _name_pair("dngn_blood_fountain", 261 + TILE_WALL_MAX),
    _name_pair("dngn_blue_fountain", 257 + TILE_WALL_MAX),
    _name_pair("dngn_closed_door", 14 + TILE_WALL_MAX),
    _name_pair("dngn_crumbled_column", 42 + TILE_WALL_MAX),
    _name_pair("dngn_deep_water", 96 + TILE_WALL_MAX),
    _name_pair("dngn_deep_water_murky", 102 + TILE_WALL_MAX),
    _name_pair("dngn_detected_secret_door", 13 + TILE_WALL_MAX),
    _name_pair("dngn_dry_fountain", 263 + TILE_WALL_MAX),
    _name_pair("dngn_dry_fountain_white", 264 + TILE_WALL_MAX),
    _name_pair("dngn_enter", 78 + TILE_WALL_MAX),
    _name_pair("dngn_enter_abyss", 174 + TILE_WALL_MAX),
    _name_pair("dngn_enter_abyss_directed", 175 + TILE_WALL_MAX),
    _name_pair("dngn_enter_cocytus", 171 + TILE_WALL_MAX),
    _name_pair("dngn_enter_dis", 169 + TILE_WALL_MAX),
    _name_pair("dngn_enter_gehenna", 170 + TILE_WALL_MAX),
    _name_pair("dngn_enter_hell", 165 + TILE_WALL_MAX),
    _name_pair("dngn_enter_labyrinth", 178 + TILE_WALL_MAX),
    _name_pair("dngn_enter_pandemonium", 179 + TILE_WALL_MAX),
    _name_pair("dngn_enter_tartarus", 172 + TILE_WALL_MAX),
    _name_pair("dngn_enter_zot_closed", 166 + TILE_WALL_MAX),
    _name_pair("dngn_enter_zot_open", 167 + TILE_WALL_MAX),
    _name_pair("dngn_escape_hatch_down", 76 + TILE_WALL_MAX),
    _name_pair("dngn_escape_hatch_up", 77 + TILE_WALL_MAX),
    _name_pair("dngn_exit_abyss", 176 + TILE_WALL_MAX),
    _name_pair("dngn_exit_dungeon", 73 + TILE_WALL_MAX),
    _name_pair("dngn_fleshy_orifice", 22 + TILE_WALL_MAX),
    _name_pair("dngn_fountain", 257 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_left", 15 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_middle", 16 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_right", 17 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_left", 19 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_middle", 20 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_right", 21 + TILE_WALL_MAX),
    _name_pair("dngn_granite_statue", 26 + TILE_WALL_MAX),
    _name_pair("dngn_granite_stump", 43 + TILE_WALL_MAX),
    _name_pair("dngn_gravestone", 44 + TILE_WALL_MAX),
    _name_pair("dngn_gravestone_ornate", 47 + TILE_WALL_MAX),
    _name_pair("dngn_lava", 90 + TILE_WALL_MAX),
    _name_pair("dngn_machine_tukima", 48 + TILE_WALL_MAX),
    _name_pair("dngn_open_door", 18 + TILE_WALL_MAX),
    _name_pair("dngn_open_sea", 94 + TILE_WALL_MAX),
    _name_pair("dngn_orcish_idol", 25 + TILE_WALL_MAX),
    _name_pair("dngn_portal", 180 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ice_cave", 187 + TILE_WALL_MAX),
    _name_pair("dngn_portal_sewer", 185 + TILE_WALL_MAX),
    _name_pair("dngn_portal_sewer_rusted", 186 + TILE_WALL_MAX),
    _name_pair("dngn_portal_volcano", 184 + TILE_WALL_MAX),
    _name_pair("dngn_portal_wizard_lab", 188 + TILE_WALL_MAX),
    _name_pair("dngn_return", 79 + TILE_WALL_MAX),
    _name_pair("dngn_return_hell", 173 + TILE_WALL_MAX),
    _name_pair("dngn_return_zot", 168 + TILE_WALL_MAX),
    _name_pair("dngn_shallow_water", 98 + TILE_WALL_MAX),
    _name_pair("dngn_shallow_water_disturbance", 100 + TILE_WALL_MAX),
    _name_pair("dngn_shallow_water_murky", 104 + TILE_WALL_MAX),
    _name_pair("dngn_shallow_water_murky_disturbance", 106 + TILE_WALL_MAX),
    _name_pair("dngn_sparkling_fountain", 259 + TILE_WALL_MAX),
    _name_pair("dngn_starry_portal", 182 + TILE_WALL_MAX),
    _name_pair("dngn_statue_ancient_hero", 41 + TILE_WALL_MAX),
    _name_pair("dngn_statue_cat", 38 + TILE_WALL_MAX),
    _name_pair("dngn_statue_centaur", 29 + TILE_WALL_MAX),
    _name_pair("dngn_statue_dragon", 33 + TILE_WALL_MAX),
    _name_pair("dngn_statue_elephant", 40 + TILE_WALL_MAX),
    _name_pair("dngn_statue_mermaid", 31 + TILE_WALL_MAX),
    _name_pair("dngn_statue_naga", 32 + TILE_WALL_MAX),
    _name_pair("dngn_statue_skull", 39 + TILE_WALL_MAX),
    _name_pair("dngn_statue_troll", 37 + TILE_WALL_MAX),
    _name_pair("dngn_stone_arch", 24 + TILE_WALL_MAX),
    _name_pair("dngn_stone_stairs_down", 74 + TILE_WALL_MAX),
    _name_pair("dngn_stone_stairs_up", 75 + TILE_WALL_MAX),
    _name_pair("dngn_swamp_tree", 10 + TILE_WALL_MAX),
    _name_pair("dngn_the_teleporter_ice_cave", 50 + TILE_WALL_MAX),
    _name_pair("dngn_the_teleporter_vaults", 49 + TILE_WALL_MAX),
    _name_pair("dngn_transit_pandemonium", 183 + TILE_WALL_MAX),
    _name_pair("dngn_trap_alarm", 67 + TILE_WALL_MAX),
    _name_pair("dngn_trap_arrow", 60 + TILE_WALL_MAX),
    _name_pair("dngn_trap_axe", 64 + TILE_WALL_MAX),
    _name_pair("dngn_trap_blade", 65 + TILE_WALL_MAX),
    _name_pair("dngn_trap_bolt", 62 + TILE_WALL_MAX),
    _name_pair("dngn_trap_dart", 59 + TILE_WALL_MAX),
    _name_pair("dngn_trap_golubria", 71 + TILE_WALL_MAX),
    _name_pair("dngn_trap_needle", 61 + TILE_WALL_MAX),
    _name_pair("dngn_trap_net", 66 + TILE_WALL_MAX),
    _name_pair("dngn_trap_plate", 72 + TILE_WALL_MAX),
    _name_pair("dngn_trap_shaft", 68 + TILE_WALL_MAX),
    _name_pair("dngn_trap_spear", 63 + TILE_WALL_MAX),
    _name_pair("dngn_trap_teleport", 69 + TILE_WALL_MAX),
    _name_pair("dngn_trap_zot", 70 + TILE_WALL_MAX),
    _name_pair("dngn_tree", 0 + TILE_WALL_MAX),
    _name_pair("dngn_tree_dead", 8 + TILE_WALL_MAX),
    _name_pair("dngn_tree_lightred", 4 + TILE_WALL_MAX),
    _name_pair("dngn_tree_red", 6 + TILE_WALL_MAX),
    _name_pair("dngn_tree_yellow", 2 + TILE_WALL_MAX),
    _name_pair("dngn_unseen_altar", 207 + TILE_WALL_MAX),
    _name_pair("dngn_unseen_entrance", 164 + TILE_WALL_MAX),
    _name_pair("dngn_wave_e", 115 + TILE_WALL_MAX),
    _name_pair("dngn_wave_n", 113 + TILE_WALL_MAX),
    _name_pair("dngn_wave_ne", 114 + TILE_WALL_MAX),
    _name_pair("dngn_wave_nw", 120 + TILE_WALL_MAX),
    _name_pair("dngn_wave_s", 117 + TILE_WALL_MAX),
    _name_pair("dngn_wave_se", 116 + TILE_WALL_MAX),
    _name_pair("dngn_wave_sw", 118 + TILE_WALL_MAX),
    _name_pair("dngn_wave_w", 119 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_ne", 324 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_nw", 323 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_se", 325 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_sw", 326 + TILE_WALL_MAX),
    _name_pair("glowing_mold", 314 + TILE_WALL_MAX),
    _name_pair("halo", 302 + TILE_WALL_MAX),
    _name_pair("halo_range", 303 + TILE_WALL_MAX),
    _name_pair("item_slot", 308 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_ne", 320 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_nw", 319 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_se", 321 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_sw", 322 + TILE_WALL_MAX),
    _name_pair("liquefaction", 162 + TILE_WALL_MAX),
    _name_pair("mold", 310 + TILE_WALL_MAX),
    _name_pair("placeholder1", 51 + TILE_WALL_MAX),
    _name_pair("placeholder10", 198 + TILE_WALL_MAX),
    _name_pair("placeholder11", 199 + TILE_WALL_MAX),
    _name_pair("placeholder12", 200 + TILE_WALL_MAX),
    _name_pair("placeholder13", 201 + TILE_WALL_MAX),
    _name_pair("placeholder14", 202 + TILE_WALL_MAX),
    _name_pair("placeholder15", 203 + TILE_WALL_MAX),
    _name_pair("placeholder16", 204 + TILE_WALL_MAX),
    _name_pair("placeholder17", 205 + TILE_WALL_MAX),
    _name_pair("placeholder18", 206 + TILE_WALL_MAX),
    _name_pair("placeholder2", 52 + TILE_WALL_MAX),
    _name_pair("placeholder3", 53 + TILE_WALL_MAX),
    _name_pair("placeholder4", 54 + TILE_WALL_MAX),
    _name_pair("placeholder5", 55 + TILE_WALL_MAX),
    _name_pair("placeholder6", 56 + TILE_WALL_MAX),
    _name_pair("placeholder7", 57 + TILE_WALL_MAX),
    _name_pair("placeholder8", 58 + TILE_WALL_MAX),
    _name_pair("placeholder9", 197 + TILE_WALL_MAX),
    _name_pair("ray", 304 + TILE_WALL_MAX),
    _name_pair("ray_out_of_range", 305 + TILE_WALL_MAX),
    _name_pair("sanctuary", 309 + TILE_WALL_MAX),
    _name_pair("shoals_deep_water", 121 + TILE_WALL_MAX),
    _name_pair("shoals_shallow_water", 130 + TILE_WALL_MAX),
    _name_pair("shoals_shallow_water_disturbance", 134 + TILE_WALL_MAX),
    _name_pair("shop_armour", 82 + TILE_WALL_MAX),
    _name_pair("shop_books", 84 + TILE_WALL_MAX),
    _name_pair("shop_food", 83 + TILE_WALL_MAX),
    _name_pair("shop_general", 80 + TILE_WALL_MAX),
    _name_pair("shop_jewellery", 87 + TILE_WALL_MAX),
    _name_pair("shop_potions", 88 + TILE_WALL_MAX),
    _name_pair("shop_scrolls", 85 + TILE_WALL_MAX),
    _name_pair("shop_wands", 86 + TILE_WALL_MAX),
    _name_pair("shop_weapons", 81 + TILE_WALL_MAX),
    _name_pair("shore_e", 110 + TILE_WALL_MAX),
    _name_pair("shore_n", 108 + TILE_WALL_MAX),
    _name_pair("shore_ne", 112 + TILE_WALL_MAX),
    _name_pair("shore_nw", 111 + TILE_WALL_MAX),
    _name_pair("shore_w", 109 + TILE_WALL_MAX),
    _name_pair("silenced", 318 + TILE_WALL_MAX),
    _name_pair("travel_exclusion_bg", 306 + TILE_WALL_MAX),
    _name_pair("travel_exclusion_centre_bg", 307 + TILE_WALL_MAX),
    _name_pair("wall_blood_e", 294 + TILE_WALL_MAX),
    _name_pair("wall_blood_n", 286 + TILE_WALL_MAX),
    _name_pair("wall_blood_s", 270 + TILE_WALL_MAX),
    _name_pair("wall_blood_w", 278 + TILE_WALL_MAX),
    _name_pair("wave_corner_ne", 145 + TILE_WALL_MAX),
    _name_pair("wave_corner_nw", 146 + TILE_WALL_MAX),
    _name_pair("wave_corner_se", 147 + TILE_WALL_MAX),
    _name_pair("wave_corner_sw", 148 + TILE_WALL_MAX),
    _name_pair("wave_deep_corner_ne", 137 + TILE_WALL_MAX),
    _name_pair("wave_deep_corner_nw", 138 + TILE_WALL_MAX),
    _name_pair("wave_deep_corner_se", 139 + TILE_WALL_MAX),
    _name_pair("wave_deep_corner_sw", 140 + TILE_WALL_MAX),
    _name_pair("wave_deep_e", 143 + TILE_WALL_MAX),
    _name_pair("wave_deep_n", 141 + TILE_WALL_MAX),
    _name_pair("wave_deep_s", 142 + TILE_WALL_MAX),
    _name_pair("wave_deep_w", 144 + TILE_WALL_MAX),
    _name_pair("wave_e", 151 + TILE_WALL_MAX),
    _name_pair("wave_ink_corner_ne", 153 + TILE_WALL_MAX),
    _name_pair("wave_ink_corner_nw", 154 + TILE_WALL_MAX),
    _name_pair("wave_ink_corner_se", 155 + TILE_WALL_MAX),
    _name_pair("wave_ink_corner_sw", 156 + TILE_WALL_MAX),
    _name_pair("wave_ink_e", 159 + TILE_WALL_MAX),
    _name_pair("wave_ink_full", 161 + TILE_WALL_MAX),
    _name_pair("wave_ink_n", 157 + TILE_WALL_MAX),
    _name_pair("wave_ink_s", 158 + TILE_WALL_MAX),
    _name_pair("wave_ink_w", 160 + TILE_WALL_MAX),
    _name_pair("wave_n", 149 + TILE_WALL_MAX),
    _name_pair("wave_s", 150 + TILE_WALL_MAX),
    _name_pair("wave_w", 152 + TILE_WALL_MAX),
};

bool tile_feat_index(const char *str, tileidx_t *idx)
{
    assert(str);
    if (!str)
        return false;

    string lc = str;
    for (unsigned int i = 0; i < lc.size(); i++)
        lc[i] = tolower(lc[i]);

    int num_pairs = sizeof(feat_name_pairs) / sizeof(feat_name_pairs[0]);
    bool result = binary_search<const char *, tileidx_t>(
       lc.c_str(), &feat_name_pairs[0], num_pairs, &strcmp, idx);
    return (result);
}

bool tile_feat_equal(tileidx_t tile, tileidx_t idx)
{
    assert(tile >= TILE_WALL_MAX && tile < TILE_FEAT_MAX);
    return (idx >= tile && idx < tile + tile_feat_count(tile));
}


typedef std::pair<tile_variation, tileidx_t> _colour_pair;

_colour_pair feat_colour_pairs[] =
{
    _colour_pair(tile_variation(0, 0), 0),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 4), 6 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 8), 8 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 12), 4 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 14), 2 + TILE_WALL_MAX),
    _colour_pair(tile_variation(263 + TILE_WALL_MAX, 15), 264 + TILE_WALL_MAX),
};

tileidx_t tile_feat_coloured(tileidx_t idx, int col)
{
    int num_pairs = sizeof(feat_colour_pairs) / sizeof(feat_colour_pairs[0]);
    tile_variation key(idx, col);
    tileidx_t found;
    bool result = binary_search<tile_variation, tileidx_t>(
       key, &feat_colour_pairs[0], num_pairs,
       &tile_variation::cmp, &found);
    return (result ? found : idx);
}

